diff --git a/src/executors/tsc/tsc.impl.js b/src/executors/tsc/tsc.impl.js
index ebaf0575224dda78fcedaf4be33f6bb9fe98c33d..78efe3fe25f4456426b12cff4b335bd0da26a1b0 100644
--- a/src/executors/tsc/tsc.impl.js
+++ b/src/executors/tsc/tsc.impl.js
@@ -13,6 +13,8 @@ const lib_1 = require("./lib");
 const ts_config_1 = require("../../utils/typescript/ts-config");
 const create_entry_points_1 = require("../../utils/package-json/create-entry-points");
 function determineModuleFormatFromTsConfig(absolutePathToTsConfig) {
+    // Force Nx to use ESM format
+    return 'esm';
     const tsConfig = (0, ts_config_1.readTsConfig)(absolutePathToTsConfig);
     if (tsConfig.options.module === ts.ModuleKind.ES2015 ||
         tsConfig.options.module === ts.ModuleKind.ES2020 ||
diff --git a/src/utils/buildable-libs-utils.js b/src/utils/buildable-libs-utils.js
index 498537c6209db72db675b5badb4a8c45a67ba372..438c4b0c2ba5b2f7665f65d0e84872635f9125be 100644
--- a/src/utils/buildable-libs-utils.js
+++ b/src/utils/buildable-libs-utils.js
@@ -274,6 +274,10 @@ function updatePaths(dependencies, paths) {
         if (dep.outputs && dep.outputs.length > 0) {
             // Directly map the dependency name to the output paths (dist/packages/..., etc.)
             paths[dep.name] = dep.outputs;
+
+            // Force Nx to resolve to .mts
+            paths[dep.name] = dep.outputs.map(out => out + '/src/index.d.mts');
+
             // check for secondary entrypoints
             // For each registered path
             for (const path of pathsKeys) {
